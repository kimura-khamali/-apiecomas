{"ast":null,"code":"// const BASE_URL = process.env.REACT_APP_BASE_URL;\n\n// async function handleResponse(response) {\n//   if (!response.ok) {\n//     throw new Error(`HTTP error! status: ${response.status}`);\n//   }\n//   return await response.json();\n// }\n\n// export const getProducts = () => \n//   fetch(`${BASE_URL}/products`).then(handleResponse);\n\n// export const getProduct = (id) => \n//   fetch(`${BASE_URL}/products/${id}`).then(handleResponse);\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\nasync function handleResponse(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n}\nexport const getProducts = () => fetch(`${BASE_URL}/products`).then(handleResponse);\n\n// const baseUrl = process.env.REACT_APP_BASE_URL;\n// console.log({ baseUrl });\n\n// export const login = async (username, password) => {\n//   try {\n//     const response = await fetch(`${baseUrl}/auth/login`, {\n//       method: \"POST\",\n//       headers: {\n//         \"content-type\": \"application/json\",\n//       },\n//       body: JSON.stringify(username, password),\n//     });\n//     return response.JSON;\n//   } catch (error) {\n//     return `error during login ${error.message}`;\n//   }\n// };","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_BASE_URL","handleResponse","response","ok","Error","status","json","getProducts","fetch","then"],"sources":["/home/studen/ecommerce-site/src/Products/Hooks/api.js"],"sourcesContent":["// const BASE_URL = process.env.REACT_APP_BASE_URL;\n\n// async function handleResponse(response) {\n//   if (!response.ok) {\n//     throw new Error(`HTTP error! status: ${response.status}`);\n//   }\n//   return await response.json();\n// }\n\n// export const getProducts = () => \n//   fetch(`${BASE_URL}/products`).then(handleResponse);\n\n// export const getProduct = (id) => \n//   fetch(`${BASE_URL}/products/${id}`).then(handleResponse);\n\n\n\n\n\n\n\n\n\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nasync function handleResponse(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n}\n\nexport const getProducts = () => \n  fetch(`${BASE_URL}/products`).then(handleResponse);\n\n\n\n\n\n\n// const baseUrl = process.env.REACT_APP_BASE_URL;\n// console.log({ baseUrl });\n\n// export const login = async (username, password) => {\n//   try {\n//     const response = await fetch(`${baseUrl}/auth/login`, {\n//       method: \"POST\",\n//       headers: {\n//         \"content-type\": \"application/json\",\n//       },\n//       body: JSON.stringify(username, password),\n//     });\n//     return response.JSON;\n//   } catch (error) {\n//     return `error during login ${error.message}`;\n//   }\n// };"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAWA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;AAE/C,eAAeC,cAAcA,CAACC,QAAQ,EAAE;EACtC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;EAC3D;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KACzBC,KAAK,CAAC,GAAGX,QAAQ,WAAW,CAAC,CAACY,IAAI,CAACR,cAAc,CAAC;;AAOpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}